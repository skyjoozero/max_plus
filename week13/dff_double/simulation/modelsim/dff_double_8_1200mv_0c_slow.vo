// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "11/29/2023 15:54:12"

// 
// Device: Altera EP4CE6F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module dff_double (
	clr,
	clk,
	d1,
	q1,
	q2);
input 	clr;
input 	clk;
input 	d1;
output 	q1;
output 	q2;

// Design Ports Information
// q1	=>  Location: PIN_F5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q2	=>  Location: PIN_D4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// d1	=>  Location: PIN_E5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clr	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("dff_double_8_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \q1~output_o ;
wire \q2~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \d1~input_o ;
wire \q1~reg0feeder_combout ;
wire \clr~input_o ;
wire \clr~inputclkctrl_outclk ;
wire \q1~reg0_q ;
wire \q2~reg0feeder_combout ;
wire \q2~reg0_q ;


// Location: IOOBUF_X0_Y23_N16
cycloneive_io_obuf \q1~output (
	.i(\q1~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q1~output_o ),
	.obar());
// synopsys translate_off
defparam \q1~output .bus_hold = "false";
defparam \q1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y23_N2
cycloneive_io_obuf \q2~output (
	.i(\q2~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q2~output_o ),
	.obar());
// synopsys translate_off
defparam \q2~output .bus_hold = "false";
defparam \q2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y23_N8
cycloneive_io_ibuf \d1~input (
	.i(d1),
	.ibar(gnd),
	.o(\d1~input_o ));
// synopsys translate_off
defparam \d1~input .bus_hold = "false";
defparam \d1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N16
cycloneive_lcell_comb \q1~reg0feeder (
// Equation(s):
// \q1~reg0feeder_combout  = \d1~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\d1~input_o ),
	.cin(gnd),
	.combout(\q1~reg0feeder_combout ),
	.cout());
// synopsys translate_off
defparam \q1~reg0feeder .lut_mask = 16'hFF00;
defparam \q1~reg0feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \clr~input (
	.i(clr),
	.ibar(gnd),
	.o(\clr~input_o ));
// synopsys translate_off
defparam \clr~input .bus_hold = "false";
defparam \clr~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \clr~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clr~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clr~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clr~inputclkctrl .clock_type = "global clock";
defparam \clr~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y23_N17
dffeas \q1~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\q1~reg0feeder_combout ),
	.asdata(vcc),
	.clrn(\clr~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\q1~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \q1~reg0 .is_wysiwyg = "true";
defparam \q1~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y23_N14
cycloneive_lcell_comb \q2~reg0feeder (
// Equation(s):
// \q2~reg0feeder_combout  = \q1~reg0_q 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\q1~reg0_q ),
	.cin(gnd),
	.combout(\q2~reg0feeder_combout ),
	.cout());
// synopsys translate_off
defparam \q2~reg0feeder .lut_mask = 16'hFF00;
defparam \q2~reg0feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y23_N15
dffeas \q2~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\q2~reg0feeder_combout ),
	.asdata(vcc),
	.clrn(\clr~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\q2~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \q2~reg0 .is_wysiwyg = "true";
defparam \q2~reg0 .power_up = "low";
// synopsys translate_on

assign q1 = \q1~output_o ;

assign q2 = \q2~output_o ;

endmodule
